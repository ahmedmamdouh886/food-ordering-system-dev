<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.food.ordering.system</groupId>
        <artifactId>order-service</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>order-container</artifactId>
    <name>Archetype - order-container</name>
    <url>http://maven.apache.org</url>
    <description>
        For creating the runnable JAR file for the microservices and have a dependency to all of our modules, and it will contain all other modules.
        It will simply have a dependency to all modules to create a single,
        runnable JAR file and run it as a microservice and also create a Docker image to use it later in cloud deployment.
        See this lesson "Assembling the Application chapter --> Why Even Care About Assembly?" in the "hexagonal-architecture-web-apps course" on educative.io.
    </description>


    <!--
    Finally, order-container, will have a dependency to all modules, to get to all dependencies,
    and create a single runnable JAR file that will run the order microservice.
    -->

    <dependencies>
        <dependency>
            <groupId>com.food.ordering.system</groupId>
            <artifactId>order-domain-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.food.ordering.system</groupId>
            <artifactId>order-application-service</artifactId>
        </dependency>
        <dependency>
            <groupId>com.food.ordering.system</groupId>
            <artifactId>order-application</artifactId>
        </dependency>
        <dependency>
            <groupId>com.food.ordering.system</groupId>
            <artifactId>order-dataaccess</artifactId>
        </dependency>
        <dependency>
            <groupId>com.food.ordering.system</groupId>
            <artifactId>order-messaging</artifactId>
        </dependency>
    </dependencies>


</project>
